version: '2.4'

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    pid: host
    ports:
      - '29100:9100'
    volumes:
      - '/:/host:ro,rslave'
      - node-exporter_textfile:/var/lib/node_exporter/textfile_collector
    command:
      - '--path.rootfs=/host'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev)($$|/)'
      - '--collector.loadavg'
      - '--collector.memory'
      - '--collector.filesystem'
      - '--collector.textfile.directory=/var/lib/node_exporter/textfile_collector'

  who-exporter:
    image: alpine:latest
    container_name: who-exporter
    restart: unless-stopped
    depends_on:
      - node-exporter
    volumes:
      - node-exporter_textfile:/textfile:rw
      - '/run/utmp:/run/utmp:ro'
    entrypoint: |
      sh -c "
        apk add --no-cache util-linux &&
        while true; do
          OUT=/textfile/who.prom
          echo '# HELP node_logged_in_user Logged-in users' > $$OUT
          echo '# TYPE node_logged_in_user gauge' >> $$OUT
          who -uH | awk 'NR>1 {print $$1}' | sort -u |
            while read user; do
              echo \"node_logged_in_user{user=\\\"$$user\\\"} 1\" >> $$OUT
            done
          sleep 60
        done
      "

  dcgm-exporter:
    image: nvidia/dcgm-exporter:latest
    container_name: dcgm-exporter
    restart: unless-stopped
    device_requests:
      - driver: nvidia
        count: -1
        capabilities: [gpu]
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    ports:
      - '29200:9400'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - '29300:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - node-exporter
      - dcgm-exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - '29400:3000'
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro

volumes:
  node-exporter_textfile:
  grafana-data:
